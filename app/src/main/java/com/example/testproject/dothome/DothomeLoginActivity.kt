package com.example.testproject.dothome

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import androidx.databinding.DataBindingUtil
import com.example.testproject.R
import com.example.testproject.retrofit.RetrofitService
import com.example.testproject.databinding.ActivityDothomeLoginBinding
import com.example.testproject.retrofit.person
import com.google.gson.Gson
import com.google.gson.GsonBuilder
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory

class DothomeLoginActivity : AppCompatActivity() {

    val tag: String = "lys"
    var txt: String =""
    private lateinit var binding: ActivityDothomeLoginBinding
    var id = ""
    var pw = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = DataBindingUtil.setContentView(this,R.layout.activity_dothome_login)
        binding.activity = this

        binding.loginButton.setOnClickListener{
            id = binding.idEdittext.text.toString()
            pw = binding.pwEdittext.text.toString()
            var gson: Gson = GsonBuilder()
                .setLenient()
                .create()

            val builder: Retrofit.Builder = Retrofit.Builder()
                .baseUrl("http://plumt.dothome.co.kr/")
                .addConverterFactory(GsonConverterFactory.create(gson))

            val retrofit: Retrofit = builder.build()

            val client: RetrofitService = retrofit.create(RetrofitService::class.java)

            val call: Call<List<person>> = client.postForUser(id, pw)

            call.enqueue(object : Callback<List<person>> {
                override fun onFailure(call: Call<List<person>>, t: Throwable) {
                    Log.e(tag, "${t.message}")
                    Log.e(tag, call.toString())
                    txt = ""
                    binding.invalidateAll()
                }

                override fun onResponse(call: Call<List<person>>, response: Response<List<person>>) {
                    val repos: List<person>? = response.body()
                    var str: String = ""
                    repos?.forEach { it ->
                        str += it.id + "\n" + it.name + "\n" + it.password + "\n" +
                                it.birth + "\n" + it.sex + "\n" + it.phone + "\n" +
                                it.email + "\n" + it.thema + "\n" + it.recently +
                                "\n" + it.first + "\n\n"
                    }
                    txt = str
                    binding.invalidateAll()
                }
            })
        }


    }
}